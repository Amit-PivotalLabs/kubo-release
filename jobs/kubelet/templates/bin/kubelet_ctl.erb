#!/bin/bash -ex

NAME="${0##*/}"

export PATH=/var/vcap/packages/kubernetes/bin/:/var/vcap/packages/docker/sbin/:$PATH

RUN_DIR=/var/vcap/sys/run/kubernetes
PIDFILE=$RUN_DIR/kubelet.pid
LOG_DIR=/var/vcap/sys/log/kubelet
DATA_DIR=/var/vcap/store/kubernetes
DOCKER_SOCKET=unix:///var/vcap/sys/run/docker/docker.sock

# shellcheck disable=SC1091
. /var/vcap/packages/pid_utils/pid_utils.sh

setup_directories() {
  mkdir -p "$RUN_DIR" "$LOG_DIR" "$DATA_DIR"
  chown -R vcap:vcap "$RUN_DIR" "$LOG_DIR" "$DATA_DIR"
}

send_process_stdout_to_logfile() {
  exec 1>> "$LOG_DIR/$NAME.stdout.log"
}

send_process_stderr_to_logfile() {
  exec 2>> "$LOG_DIR/$NAME.stderr.log"
}

start_kubelet() {

  ln -s -f /var/vcap/jobs/kubelet/packages/cni/bin/nsenter /usr/bin/nsenter


  export HTTP_PROXY=10.0.252.2:8888
  export http_proxy=10.0.252.2:8888
  export HTTPS_PROXY=10.0.252.2:8888
  export https_proxy=10.0.252.2:8888
  export no_proxy='10.200.0.0,10.200.0.1,10.200.0.2,10.200.0.3,10.200.0.4,10.200.0.5,10.200.0.6,10.200.0.7,10.200.0.8,10.200.0.9,10.200.0.10,10.200.0.11,10.200.0.12,10.200.0.13,10.200.0.14,10.200.0.15,10.200.0.16,10.200.0.17,10.200.0.18,10.200.0.19,10.200.0.20,10.200.0.21,10.200.0.22,10.200.0.23,10.200.0.24,10.200.0.25,10.200.0.26,10.200.0.27,10.200.0.28,10.200.0.29,10.200.0.30,10.200.0.31,10.200.0.32,10.200.0.33,10.200.0.34,10.200.0.35,10.200.0.36,10.200.0.37,10.200.0.38,10.200.0.39,10.200.0.40,10.200.0.41,10.200.0.42,10.200.0.43,10.200.0.44,10.200.0.45,10.200.0.46,10.200.0.47,10.200.0.48,10.200.0.49,10.200.0.50,10.200.0.51,10.200.0.52,10.200.0.53,10.200.0.54,10.200.0.55,10.200.0.56,10.200.0.57,10.200.0.58,10.200.0.59,10.200.0.60,10.200.0.61,10.200.0.62,10.200.0.63' 
  export NO_PROXY='10.200.0.0,10.200.0.1,10.200.0.2,10.200.0.3,10.200.0.4,10.200.0.5,10.200.0.6,10.200.0.7,10.200.0.8,10.200.0.9,10.200.0.10,10.200.0.11,10.200.0.12,10.200.0.13,10.200.0.14,10.200.0.15,10.200.0.16,10.200.0.17,10.200.0.18,10.200.0.19,10.200.0.20,10.200.0.21,10.200.0.22,10.200.0.23,10.200.0.24,10.200.0.25,10.200.0.26,10.200.0.27,10.200.0.28,10.200.0.29,10.200.0.30,10.200.0.31,10.200.0.32,10.200.0.33,10.200.0.34,10.200.0.35,10.200.0.36,10.200.0.37,10.200.0.38,10.200.0.39,10.200.0.40,10.200.0.41,10.200.0.42,10.200.0.43,10.200.0.44,10.200.0.45,10.200.0.46,10.200.0.47,10.200.0.48,10.200.0.49,10.200.0.50,10.200.0.51,10.200.0.52,10.200.0.53,10.200.0.54,10.200.0.55,10.200.0.56,10.200.0.57,10.200.0.58,10.200.0.59,10.200.0.60,10.200.0.61,10.200.0.62,10.200.0.63'



  kubelet \
    --allow-privileged=true \
    --api-servers=<%= p("kubernetes-api-url") %> \
    --cloud-provider= \
    --cluster-dns=10.100.200.10 \
    --cluster-domain=cluster.local \
    --container-runtime=docker \
    --docker="${DOCKER_SOCKET}" \
    --docker-endpoint="${DOCKER_SOCKET}" \
    --hostname-override="<%= spec.ip %>" \
    --kubeconfig=/var/vcap/jobs/kubeconfig/config/kubeconfig \
    --non-masquerade-cidr 10.200.0.0/26 \
    --serialize-image-pulls=false \
    --tls-cert-file=/var/vcap/jobs/kubelet/config/kubelet.pem \
    --tls-private-key-file=/var/vcap/jobs/kubelet/config/kubelet-key.pem \
    --network-plugin=cni \
    --network-plugin-dir=/var/vcap/jobs/kubelet/packages/cni/bin \
    --v=2 \
  1>> $LOG_DIR/kubelet.stdout.log \
  2>> $LOG_DIR/kubelet.stderr.log
}

stop_kubelet() {
  kill_and_wait "$PIDFILE"
}

pid() {
  head -1 "$PIDFILE"
}

stop_associated_logging_processes() {
  # shellcheck disable=SC2046
  pkill -g $(get_group_pid)
}

get_group_pid() {
  ps -ho pgrp "$(pid)"
}


case $1 in

  start)

    setup_directories
    send_process_stdout_to_logfile
    send_process_stderr_to_logfile

    pid_guard "$PIDFILE" "Kubelet"

    echo $$ > $PIDFILE
    start_kubelet
    ;;

  stop)
    stop_associated_logging_processes
    stop_kubelet
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    ;;

esac
